---
import { Check, Zap, Shield, Heart } from 'lucide-astro';
import Anim from './Anim.astro';

interface Feature {
  icon: any;
  title: string;
  description: string;
}

interface Props {
  sectionIndex?: number;
  title?: string;
  subtitle?: string;
  features?: Feature[];
}

const defaults = {
  title: "Pourquoi nous choisir",
  subtitle: "Des fonctionnalités pensées pour votre réussite",
  features: [
    { icon: 'Zap', title: 'Performance optimale', description: "Sites ultra-rapides pour une expérience utilisateur exceptionnelle." },
    { icon: 'Shield', title: 'Sécurité renforcée', description: "Protection avancée de vos données et de votre infrastructure." },
    { icon: 'Heart', title: 'Support dédié', description: "Une équipe à votre écoute pour vous accompagner au quotidien." },
    { icon: 'Check', title: 'Qualité garantie', description: "Code propre, testé et conforme aux meilleurs standards." },
  ] as { icon: string; title: string; description: string }[],
};
const merged = { ...defaults, ...(Astro.props as any) } as {
  title: string; subtitle?: string; features: { icon: string; title: string; description: string }[]
};
const { title, subtitle } = merged;
const featureList = merged.features ?? [];

const iconMap = { Check, Zap, Shield, Heart } as const;
const normalized = featureList.map((f) => ({
  ...f,
  Icon: iconMap[(f.icon as keyof typeof iconMap) ?? 'Zap'] ?? Zap,
}));
---

<section class="wf-features" id="features">
  <div class="wf-features__container">
    <div class="wf-features__header">
      <Anim effect="fade-up" delay={100}>
        <h2 class="wf-features__title" data-bind="features.title">{title}</h2>
      </Anim>
      <Anim effect="fade-up" delay={160}>
        <p class="wf-features__subtitle" data-bind="features.subtitle">{subtitle}</p>
      </Anim>
    </div>
    <div class="wf-features__grid">
      {normalized.map((feature, index) => {
        const IconComponent = feature.Icon;
        return (
          <Anim effect="fade-up" delay={150 + index * 100}>
            <div class="wf-feature-card card">
              <div class="wf-feature-card__icon-wrapper">
                <IconComponent size={32} strokeWidth={1.5} class="wf-feature-card__icon" />
              </div>
              <h3 class="wf-feature-card__title" data-bind={`features.items.${index}.title`}>{feature.title}</h3>
              <p class="wf-feature-card__description" data-bind={`features.items.${index}.description`}>{feature.description}</p>
            </div>
          </Anim>
        );
      })}
    </div>
  </div>
</section>

<style>
  .wf-features {
    padding: 6rem 0;
    background: linear-gradient(135deg, var(--surface-2) 0%, var(--surface) 100%);
    border-bottom: 2px solid var(--color-border);
    position: relative;
    overflow: hidden;
  }

  .wf-features::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -10%;
    width: 500px;
    height: 500px;
    border: 2px solid #eee;
    border-radius: 50%;
    animation: rotate 30s linear infinite;
  }

  @keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  .wf-features__container {
    max-width: var(--container-max);
    margin: 0 auto;
    padding: 0 1.5rem;
    position: relative;
    z-index: 1;
  }

  .wf-features__header {
    text-align: center;
    margin-bottom: 4rem;
  }

  .wf-features__title {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    position: relative;
    display: inline-block;
  }

  .wf-features__title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background: var(--color-border);
  }

  .wf-features__subtitle {
    font-size: 1.2rem;
    color: #666;
    margin-top: 1.5rem;
  }

  .wf-features__grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2rem;
  }

  .wf-feature-card {
    padding: 2.5rem 2rem;
    border: 2px solid var(--color-border);
    background: var(--surface);
    transition: transform var(--transition), box-shadow var(--transition), background var(--transition), color var(--transition);
    position: relative;
    overflow: hidden;
  }

  .wf-feature-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 0;
    background: var(--color-accent-black);
    transition: height 0.4s;
    z-index: 0;
  }

  .wf-feature-card:hover::before {
    height: 100%;
  }

  .wf-feature-card:hover {
    transform: translateY(-10px) scale(1.03);
    box-shadow: var(--shadow-lg);
  }

  .wf-feature-card__icon-wrapper {
    width: 64px;
    height: 64px;
    border: 2px solid var(--color-border);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1.5rem;
    background: var(--surface);
    transition: all 0.4s;
    position: relative;
    z-index: 1;
  }

  .wf-feature-card:hover .wf-feature-card__icon-wrapper {
    transform: rotate(360deg) scale(1.1);
    border-color: #fff;
    background: #fff;
  }

  .wf-feature-card__icon {
    transition: color 0.4s;
  }

  .wf-feature-card__title {
    font-size: 1.3rem;
    margin-bottom: 1rem;
    position: relative;
    z-index: 1;
    transition: color 0.4s;
  }

  .wf-feature-card:hover .wf-feature-card__title {
    color: #fff;
  }

  .wf-feature-card__description {
    line-height: 1.6;
    color: #666;
    position: relative;
    z-index: 1;
    transition: color 0.4s;
  }

  .wf-feature-card:hover .wf-feature-card__description {
    color: #ddd;
  }

  /* Animations gérées via <Anim /> */

  @media (max-width: 768px) {
    .wf-features__title {
      font-size: 2rem;
    }

    .wf-features__subtitle {
      font-size: 1rem;
    }
  }
</style>
