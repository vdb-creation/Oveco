---
interface Props {
  title: string;
  description?: string;
  category?: string;
  image?: string;
  backHref?: string;
  backLabel?: string;
  client?: string;
  date?: string;
  tags?: string[];
  website?: string;
  gallery?: string[];
  metrics?: { label: string; value: string }[];
  ctaHref?: string;
  ctaLabel?: string;
}

const {
  title,
  description = '',
  category = '',
  image = '',
  backHref = '/',
  backLabel = 'Retour',
  client = '',
  date = '',
  tags = [],
  website = '',
  gallery = [],
  metrics = [],
  ctaHref = website || '',
  ctaLabel = 'Visiter le projet',
} = Astro.props as Props;
---

<main class="wf-project">
  <section class="wf-project__hero" style={image ? `--hero:url(${image})` : undefined}>
    <div class="wf-project__hero-overlay"></div>
    <div class="wf-project__hero-content">
      {category && <span class="chip chip--ghost">{category}</span>}
      <h1>{title}</h1>
      {(client || date) && (
        <p class="wf-project__meta">
          {client && <span>{client}</span>}
          {client && date && <span class="sep">•</span>}
          {date && <span>{date}</span>}
        </p>
      )}
      {(ctaHref || backHref) && (
        <div class="wf-project__cta">
          {ctaHref && <a class="btn btn--primary" href={ctaHref} target="_blank" rel="noopener">{ctaLabel}</a>}
          {backHref && <a class="btn" href={backHref}>{backLabel}</a>}
        </div>
      )}
    </div>
  </section>

  <section class="wf-project__body">
    <div class="wf-project__grid">
      <article class="wf-project__content card">
        {description && <p>{description}</p>}
        {Array.isArray(gallery) && gallery.length > 0 && (
          <div class="wf-project__gallery">
            {gallery.map((src) => (
              <img src={src} alt={title} loading="lazy" />
            ))}
          </div>
        )}
      </article>
      <aside class="wf-project__aside">
        <div class="details card">
          <h3>Détails</h3>
          <ul class="details__list">
            {category && (
              <li><span>Catégorie</span><strong>{category}</strong></li>
            )}
            {client && (
              <li><span>Client</span><strong>{client}</strong></li>
            )}
            {date && (
              <li><span>Date</span><strong>{date}</strong></li>
            )}
            {website && (
              <li><span>Site</span><a href={website} target="_blank" rel="noopener">{website}</a></li>
            )}
          </ul>
          {Array.isArray(tags) && tags.length > 0 && (
            <div class="tags">
              {tags.map((t) => (<span class="chip">{t}</span>))}
            </div>
          )}
        </div>
        {Array.isArray(metrics) && metrics.length > 0 && (
          <div class="metrics card">
            <div class="metrics__grid">
              {metrics.map((m) => (
                <div class="metric"><div class="metric__value">{m.value}</div><div class="metric__label">{m.label}</div></div>
              ))}
            </div>
          </div>
        )}
      </aside>
    </div>
  </section>
</main>

<style>
  .wf-project { width: 100%; }
  .wf-project__hero { position: relative; min-height: 360px; display: grid; place-items: center; background: var(--surface); overflow: hidden; }
  .wf-project__hero::before { content:""; position:absolute; inset:0; background-image: var(--hero); background-size: cover; background-position: center; filter: blur(8px) saturate(1.05); transform: scale(1.05); opacity:.35; }
  .wf-project__hero-overlay { position:absolute; inset:0; background: linear-gradient(180deg, rgba(0,0,0,.35), rgba(0,0,0,.15)); }
  .wf-project__hero-content { position: relative; z-index: 1; max-width: var(--container-max); width: 100%; padding: 3rem 1.5rem; color: #fff; text-align: center; }
  .wf-project__hero-content h1 { font-size: 2.25rem; margin: .75rem 0; letter-spacing: .3px; }
  .wf-project__meta { opacity: .9; margin: .25rem 0 1rem; }
  .wf-project__meta .sep { margin: 0 .5rem; opacity: .8; }
  .wf-project__cta { display: flex; gap: .75rem; justify-content: center; margin-top: .75rem; }

  .wf-project__body { max-width: var(--container-max); margin: 0 auto; padding: 2rem 1.5rem; }
  .wf-project__grid { display: grid; grid-template-columns: 1.7fr .9fr; gap: 1.5rem; align-items: start; }
  .wf-project__content { line-height: 1.8; }
  .wf-project__gallery { margin-top: 1.25rem; display: grid; grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); gap: .75rem; }
  .wf-project__gallery img { width: 100%; height: auto; border: 1px solid var(--color-border); border-radius: var(--radius-md); }

  .wf-project__aside { display: grid; gap: 1rem; }
  .card { background: var(--surface); border: 1px solid var(--color-border); border-radius: var(--radius-lg); padding: 1rem; }
  .details h3 { margin: .25rem 0 1rem; font-size: 1.1rem; }
  .details__list { list-style: none; margin: 0 0 1rem; padding: 0; display: grid; gap: .5rem; }
  .details__list li { display: flex; justify-content: space-between; gap: 1rem; border-bottom: 1px dashed var(--color-border-light); padding-bottom: .5rem; }
  .details__list li span { color: #666; }
  .details__list li a { color: var(--color-primary); text-decoration: none; }
  .tags { display: flex; flex-wrap: wrap; gap: .45rem; }
  .chip { display: inline-flex; align-items: center; padding: .25rem .6rem; border: 1px solid var(--color-border); border-radius: 999px; background: rgba(255,255,255,.15); backdrop-filter: var(--backdrop-blur-sm); color: inherit; }
  .chip--ghost { background: rgba(255,255,255,.2); border-color: rgba(255,255,255,.35); }

  .metrics__grid { display: grid; grid-template-columns: repeat(2, minmax(0,1fr)); gap: .75rem; }
  .metric { text-align: center; padding: .75rem; border: 1px dashed var(--color-border-light); border-radius: var(--radius-md); }
  .metric__value { font-size: 1.25rem; font-weight: 700; }
  .metric__label { color: #666; font-size: .9rem; }

  .btn { display: inline-block; padding: .75rem 1.25rem; border: 1px solid var(--color-border); border-radius: var(--radius-md); text-decoration: none; background: var(--surface); color: var(--color-text); }
  .btn--primary { background: var(--gradient-primary); color: #fff; border-color: transparent; }

  @media (max-width: 1024px) {
    .wf-project__grid { grid-template-columns: 1fr; }
  }
  @media (max-width: 640px) {
    .wf-project__hero-content h1 { font-size: 1.75rem; }
    .wf-project__cta { flex-direction: column; align-items: center; }
  }
</style>


