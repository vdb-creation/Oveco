---
/**
 * Composant: Competences
 * Grille de compétences avec icônes et liens
 * Compatible TinaCMS via props
 */

import SmartImage from './SmartImage.astro';

export interface Competence {
  icon?: string;  // TinaCMS field: icon path
  alt?: string;   // TinaCMS field: alt text
  image?: string; // Legacy field
  title: string;
  url?: string;
  description?: string;
}

export interface Props {
  subtitle?: string;
  title?: string;
  description?: string;
  competences?: Competence[];
}

const {
  subtitle = "Nom du client",
  title = "Titre narratif",
  description,
  competences = [
    {
      icon: "/uploads/icons/clim.png",
      title: "Compétence 1",
      url: "/expertise#clim"
    },
    {
      icon: "/uploads/icons/eolienne.png",
      title: "Compétence 2",
      url: "/expertise#eolienne"
    },
    {
      icon: "/uploads/icons/elec.png",
      title: "Compétence 3",
      url: "/expertise#electricite"
    },
    {
      icon: "/uploads/icons/personne.png",
      title: "Compétence 4",
      url: "/expertise#accompagnement"
    }
  ]
} = Astro.props;

// Normaliser les chemins d'images TinaCMS
function normalizePath(input?: string): string {
  if (!input) return '';
  let path = String(input).trim();
  if (!path) return '';
  // URLs absolues/data: retourner tel quel
  if (/^(https?:)?\/\//i.test(path) || path.startsWith('data:')) return path;
  // Retirer /public/ si présent
  if (path.startsWith('/public/')) path = path.replace('/public/', '/');
  // Ajouter / si manquant
  if (!path.startsWith('/')) path = '/' + path;
  return path;
}

// Extraire src et alt d'une compétence
function getImageData(competence: Competence) {
  const src = normalizePath(competence.icon || competence.image) || '/uploads/icons/placeholder.png';
  const alt = competence.alt || competence.title;
  return { src, alt };
}
---

<section class="competences" aria-labelledby="competences-title">
  <div class="container competences__container">
    <header class="competences__header">
      <p class="competences__subtitle">{subtitle}</p>
      <h2 class="competences__title" id="competences-title">{title}</h2>
      {description && <p class="competences__description">{description}</p>}
    </header>

    <ul class="competences__grid" role="list">
      {competences.map((c) => {
        const { src, alt } = getImageData(c);
        return (
          <li class="competences__item" role="listitem">
            <figure class="competences__figure">
              <SmartImage
                cmsSrc={src}
                alt={alt}
                width={168}
                height={168}
                context="default"
                loading="lazy"
                class="competences__image"
              />
              <figcaption class="visually-hidden">{c.title}</figcaption>
            </figure>
            <div class="competences__body">
              <h3 class="competences__name">{c.title}</h3>
              {c.description ? (
                <p class="competences__description-item">{c.description}</p>
              ) : (
                <a 
                  class="competences__link" 
                  href={c.url || '#'} 
                  aria-label={`En savoir plus sur ${c.title}`}
                >
                  <span>En savoir plus</span>
                </a>
              )}
            </div>
          </li>
        );
      })}
    </ul>
  </div>
</section>

<style>
/* CSS extrait de wp-content/themes/oveco/style.css (main) */
.competences__container { width: 100%; max-width: 1214px; display: flex; flex-direction: column; align-items: center; gap: 72px; }
.competences__header { width: 100%; max-width: 706.82px; display: flex; flex-direction: column; align-items: center; gap: 10px; text-align: center; }
.competences__subtitle { color: #5C6D6F; font-size: 19.2px; font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif; font-weight: 700; text-transform: uppercase; line-height: 20px; letter-spacing: 1.92px; margin: 0; }
.competences__title { align-self: stretch; color: #334749; font-size: 39.81px; font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif; font-weight: 800; line-height: 47.77px; margin: 0; }
.competences__description { align-self: stretch; color: #5C6D6F; font-size: 16px; font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif; font-weight: 400; line-height: 28.8px; margin: 0; }
.competences__grid { 
  width: 100%; 
  display: grid; 
  grid-template-columns: repeat(3, 1fr); 
  gap: clamp(32px, 5vw, 61px); 
  row-gap: clamp(24px, 4vw, 42px); 
  list-style: none; 
  padding: 0; 
  margin: 0; 
  justify-items: center; 
}

.competences__item { 
  width: 100%; 
  max-width: 364px; 
  display: inline-flex; 
  flex-direction: column; 
  align-items: center; 
  gap: clamp(16px, 3vw, 24px); 
}

.competences__figure { 
  margin: 0; 
  width: clamp(120px, 15vw, 168px); 
  height: clamp(120px, 15vw, 168px); 
  display: flex; 
  align-items: center; 
  justify-content: center; 
}

.competences__figure img, .competences__image { 
  width: 100% !important; 
  height: 100% !important; 
  object-fit: contain; 
  display: block; 
}

.competences__body { 
  display: flex; 
  flex-direction: column; 
  align-items: center; 
  gap: clamp(6px, 1vw, 8px); 
}

.competences__name { 
  width: 100%; 
  max-width: 324px; 
  text-align: center; 
  color: #334749; 
  font-size: clamp(20px, 3vw, 27.65px); 
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif; 
  font-weight: 800; 
  line-height: clamp(24px, 3.5vw, 30.42px); 
  margin: 0; 
}

.competences__link { 
  display: inline-flex; 
  align-items: center; 
  gap: 6px; 
  color: #048B9A; 
  font-size: clamp(14px, 2vw, 16px); 
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif; 
  font-weight: 700; 
  line-height: clamp(16px, 2.5vw, 19.2px); 
  text-decoration: none; 
}

.competences__link::after { 
  content: ""; 
  width: 10px; 
  height: 8.57px; 
  border: 1.5px solid currentColor; 
  border-left: 0; 
  border-bottom: 0; 
  transform: rotate(45deg); 
  display: inline-block; 
  margin-top: 2px; 
}

.competences__link:focus-visible { 
  outline: 2px solid #048B9A; 
  outline-offset: 2px; 
  border-radius: 2px; 
}

.competences__description-item { 
  width: 100%; 
  max-width: 364px; 
  text-align: center; 
  color: #5C6D6F; 
  font-size: clamp(14px, 2vw, 16px); 
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif; 
  font-weight: 400; 
  line-height: clamp(20px, 3vw, 28.8px); 
  margin: 0; 
}

/* Responsive amélioré */
@media (max-width: 1200px) { 
  .competences__grid { 
    grid-template-columns: repeat(2, 1fr); 
    gap: clamp(24px, 4vw, 40px); 
    row-gap: clamp(20px, 3vw, 32px); 
  } 
}

@media (max-width: 768px) { 
  .competences { 
    padding: clamp(24px, 4vw, 32px) clamp(16px, 3vw, 24px); 
  } 
  
  .competences__grid { 
    grid-template-columns: 1fr; 
    gap: clamp(20px, 3vw, 28px); 
    row-gap: clamp(16px, 2.5vw, 24px); 
  } 
  
  .competences__item { 
    width: 100%; 
    max-width: 100%; 
  } 
  
  .competences__name { 
    width: 100%; 
    max-width: 100%; 
  } 
  
  .competences__description-item { 
    width: 100%; 
    max-width: 100%; 
  }
}

@media (max-width: 480px) {
  .competences__container {
    gap: clamp(32px, 6vw, 48px);
  }
  
  .competences__header {
    gap: clamp(8px, 2vw, 12px);
  }
  
  .competences__subtitle {
    font-size: clamp(14px, 3vw, 16px);
  }
  
  .competences__title {
    font-size: clamp(24px, 5vw, 32px);
    line-height: clamp(28px, 6vw, 36px);
  }
}
</style>
