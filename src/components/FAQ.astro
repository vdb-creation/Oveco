---
import { ChevronDown, HelpCircle } from 'lucide-astro';
import Anim from './Anim.astro';

interface FAQ {
  question: string;
  answer: string;
}

interface Props {
  sectionIndex?: number;
  title?: string;
  faqs?: FAQ[];
}

const defaults = {
  title: "Questions Fréquentes",
  faqs: [
    {
      question: "Quels sont vos délais de réalisation ?",
      answer: "Les délais varient selon la complexité du projet. En moyenne, un site web complet prend entre 4 et 8 semaines.",
    },
    {
      question: "Proposez-vous un suivi après livraison ?",
      answer: "Oui, nous offrons un support de 3 mois inclus, puis des formules de maintenance mensuelle.",
    },
    {
      question: "Travaillez-vous avec des technologies spécifiques ?",
      answer: "Nous sommes flexibles et nous adaptons aux besoins. Nous travaillons principalement avec React, Vue, Astro et Next.js.",
    },
    {
      question: "Comment se déroule un projet type ?",
      answer: "Brief → Proposition → Validation → Développement → Tests → Livraison → Formation → Support.",
    },
  ],
};
const merged = { ...defaults, ...(Astro.props as any) } as { title: string; faqs: { question: string; answer: string }[] };
const { title, faqs } = merged;
---

<section class="wf-faq">
  <div class="wf-faq__container">
    <Anim effect="fade-up" delay={100}>
      <div class="wf-faq__header">
        <HelpCircle size={40} />
        <h2 class="wf-faq__title" data-bind="faq.title">{title}</h2>
      </div>
    </Anim>
    <div class="wf-faq__list">
      {faqs.map((faq, index) => (
        <Anim effect="fade-up" delay={150 + index * 80}>
          <details class="wf-faq__item" data-index={index}>
            <summary class="wf-faq__question">
              <span data-bind={`faq.items.${index}.question`}>{faq.question}</span>
              <ChevronDown size={24} class="wf-faq__icon" />
            </summary>
            <div class="wf-faq__answer">
              <p data-bind={`faq.items.${index}.answer`}>{faq.answer}</p>
            </div>
          </details>
        </Anim>
      ))}
    </div>
  </div>
</section>

<style>
  .wf-faq {
    padding: 6rem 0;
    background: var(--surface);
    border-bottom: 2px solid var(--color-border);
  }

  .wf-faq__container {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .wf-faq__header {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 3rem;
  }

  .wf-faq__header svg {
    color: var(--color-text);
  }

  .wf-faq__title {
    font-size: 2.5rem;
    text-align: center;
    position: relative;
  }

  .wf-faq__title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background: var(--color-border);
  }

  .wf-faq__list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .wf-faq__item {
    border: 2px solid var(--color-border);
    background: var(--surface);
    transition: transform var(--transition), box-shadow var(--transition);
  }

  .wf-faq__item:hover {
    transform: translateX(5px);
    box-shadow: var(--shadow-md);
  }

  .wf-faq__item[open] {
    background: var(--surface-2);
  }

  .wf-faq__question {
    padding: 1.5rem;
    font-weight: bold;
    cursor: pointer;
    list-style: none;
    display: flex;
    justify-content: space-between;
    align-items: center;
    user-select: none;
    gap: 1rem;
  }

  .wf-faq__question::-webkit-details-marker {
    display: none;
  }

  .wf-faq__icon {
    color: var(--color-text);
    transition: transform var(--transition);
    flex-shrink: 0;
  }

  .wf-faq__item[open] .wf-faq__icon {
    transform: rotate(180deg);
  }

  .wf-faq__answer {
    padding: 0 1.5rem 1.5rem;
    border-top: 2px solid #eee;
  }

  .wf-faq__answer p {
    margin-top: 1rem;
    line-height: 1.6;
    color: #555;
  }

  /* Animations gérées via <Anim /> */

  @media (max-width: 768px) {
    .wf-faq__title {
      font-size: 2rem;
    }

    .wf-faq__question {
      font-size: 0.95rem;
    }
  }
</style>
