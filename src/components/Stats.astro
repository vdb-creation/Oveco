---
/**
 * Composant: Stats
 * Affichage de statistiques en grille
 * Compatible TinaCMS via props
 */

export interface StatItem {
  value: string;
  label: string;
  description?: string;
}

export interface Props {
  stats?: StatItem[];
  title?: string;
}

const {
  title = "Statistiques du projet",
  stats = [
    {
      value: "+ de 45",
      label: "panneaux solaires",
      description: "Lorem ipsum dolor sit amet consectetur adipiscing elit semper dalar elementum tempus hac tellus libero"
    },
    {
      value: "+ de 30",
      label: "Ã©oliennes",
      description: "Lorem ipsum dolor sit amet consectetur adipiscing elit semper dalar elementum tempus hac tellus libero"
    },
    {
      value: "+ de 60",
      label: "batteries de stockage",
      description: "Lorem ipsum dolor sit amet consectetur adipiscing elit semper dalar elementum tempus hac tellus libero"
    }
  ]
} = Astro.props;
---

<section class="stats" aria-labelledby="stats-title">
  <div class="container stats__container">
    <h2 id="stats-title" class="stats__title visually-hidden">{title}</h2>

    <ul class="stats__grid" role="list">
      {stats.map((stat) => (
        <li class="stats__item" role="listitem">
          <div class="stats__content">
            <h1 class="stats__value">{stat.value}</h1>
            <h3 class="stats__label">{stat.label}</h3>
            {stat.description && <p class="stats__desc">{stat.description}</p>}
          </div>
        </li>
      ))}
    </ul>
  </div>
</section>

<style>
.stats {
  width: 100%;
  background: var(--oveco-white);
  display: flex;
  justify-content: center;
  padding: 42px 24px;
}

.stats__container {
  width: 100%;
  max-width: 1219px;
}

.stats__title {
  margin: 0;
}

.stats__grid {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 61px;
  list-style: none;
  padding: 0;
  margin: 0;
  justify-items: center;
}

@media (max-width: 1200px) {
  .stats__grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 40px;
  }
}

@media (max-width: 768px) {
  .stats {
    padding: 32px 16px;
  }
  
  .stats__grid {
    grid-template-columns: 1fr;
    gap: 28px;
  }
}

.stats__item {
  width: 364px;
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  gap: 24px;
}

@media (max-width: 768px) {
  .stats__item {
    width: 100%;
  }
}

.stats__content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
}

.stats__value {
  width: 324px;
  text-align: center;
  color: var(--oveco-text);
  font-size: var(--oveco-font-h1);
  font-family: var(--oveco-font-family);
  font-weight: var(--oveco-weight-extrabold);
  line-height: 1.2;
  margin: 0;
}

@media (max-width: 768px) {
  .stats__value {
    width: 100%;
  }
}

.stats__label {
  width: 324px;
  text-align: center;
  color: var(--oveco-secondary);
  font-size: var(--oveco-font-h4);
  font-family: var(--oveco-font-family);
  font-weight: var(--oveco-weight-bold);
  line-height: 1.1;
  margin: 0;
}

@media (max-width: 768px) {
  .stats__label {
    width: 100%;
  }
}

.stats__desc {
  width: 364px;
  text-align: center;
  color: var(--oveco-text);
  font-size: var(--oveco-font-p);
  font-family: var(--oveco-font-family);
  font-weight: var(--oveco-weight-regular);
  line-height: var(--oveco-line-extra-loose);
  margin: 0;
}

@media (max-width: 768px) {
  .stats__desc {
    width: 100%;
  }
}

/* A11y helper */
.visually-hidden {
  position: absolute !important;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  border: 0;
}
</style>
