---
import { Palette, Code, Smartphone, Rocket, Zap, Shield, Heart, Check } from 'lucide-astro';
import Anim from './Anim.astro';

// Map des icônes disponibles
const iconMap = {
  Palette,
  Code,
  Smartphone,
  Rocket,
  Zap,
  Shield,
  Heart,
  Check,
};

interface Service {
  icon?: string;
  title: string;
  description: string;
}

interface Props {
  sectionIndex?: number;
  title?: string;
  services?: Service[];
}

// Props par défaut
const defaults: Props = {
  title: "Nos Services",
  services: [
    {
      icon: "Palette",
      title: "Design UI/UX",
      description: "Création d'interfaces modernes et intuitives pour une expérience utilisateur optimale.",
    },
    {
      icon: "Code",
      title: "Développement Web",
      description: "Applications web performantes et scalables avec les dernières technologies.",
    },
    {
      icon: "Smartphone",
      title: "Applications Mobile",
      description: "Apps natives et cross-platform pour iOS et Android.",
    },
    {
      icon: "Rocket",
      title: "Optimisation SEO",
      description: "Amélioration de votre visibilité en ligne et de votre référencement naturel.",
    },
  ],
};

const merged = { ...defaults, ...(Astro.props as any) } as {
  title: string; services: { icon?: string; title: string; description: string }[]
};
const { title, services } = merged;

// Mapper les noms d'icônes aux composants
const servicesWithIcons = services?.map(service => ({
  ...service,
  IconComponent: service.icon && iconMap[service.icon as keyof typeof iconMap],
})) || [];
---

<section class="wf-services" id="services">
  <div class="wf-services__container">
    <Anim effect="fade-up" delay={100}>
      <h2 class="wf-services__title" data-bind="services.title">{title}</h2>
    </Anim>
    <div class="wf-services__grid">
      {servicesWithIcons.map((service, index) => {
        const Icon = service.IconComponent;
        return (
          <Anim effect="fade-up" delay={150 + index * 80}>
            <article class="wf-service-card card">
            {Icon && (
              <div class="wf-service-card__icon" aria-hidden="true">
                <Icon size={48} strokeWidth={1.5} />
              </div>
            )}
            <h3 class="wf-service-card__title" data-bind={`services.items.${index}.title`}>{service.title}</h3>
            <p class="wf-service-card__description" data-bind={`services.items.${index}.description`}>{service.description}</p>
            </article>
          </Anim>
        );
      })}
    </div>
  </div>
</section>

<style>
  .wf-services {
    padding: 6rem 0;
    background: var(--surface);
    border-bottom: 2px solid var(--color-border);
  }

  .wf-services__container {
    max-width: var(--container-max);
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .wf-services__title {
    font-size: 2.5rem;
    margin-bottom: 3rem;
    text-align: center;
    border-bottom: 3px solid var(--color-border);
    padding-bottom: 1rem;
  }

  .wf-services__grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
  }

  .wf-service-card {
    border: 2px solid var(--color-border);
    padding: 2rem;
    text-align: center;
    transition: transform var(--transition), box-shadow var(--transition), background var(--transition), color var(--transition);
    background: var(--surface);
  }

  .wf-service-card:hover {
    background: var(--color-accent-black);
    color: #fff;
    transform: translateY(-8px) scale(1.02);
    box-shadow: var(--shadow-lg);
  }

  .wf-service-card__icon {
    margin-bottom: 1.5rem;
    transition: transform 0.3s;
  }

  .wf-service-card:hover .wf-service-card__icon {
    transform: scale(1.1) rotate(5deg);
  }

  .wf-service-card:hover .wf-service-card__icon :global(svg) {
    color: #fff;
  }

  .wf-service-card__title {
    font-size: 1.3rem;
    margin-bottom: 1rem;
  }

  .wf-service-card__description {
    line-height: 1.6;
    color: #666;
  }

  .wf-service-card:hover .wf-service-card__description {
    color: #ddd;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 768px) {
    .wf-services__title {
      font-size: 2rem;
    }
  }
</style>
