---
/**
 * Testimonials Section - Oveco
 * Section des témoignages clients avec carrousel horizontal et navigation
 * 
 * @component
 * @tinacms Template : testimonials
 */

import TestimonialCard from './TestimonialCard.astro';
import { getTestimonialCards } from '../lib/testimonials';

export interface Props {
  subtitle?: string;
  title: string;
  description?: string;
  linkText?: string;
  linkUrl?: string;
  sectionIndex?: number;
  testimonials: Array<{
    thumbnail?: {
      src: string;
      alt?: string;
    };
    client_name?: string;
    client_position?: string;
    client_company?: string;
    card_content?: string;
    content?: string;
    linked_project?: {
      link: string;
      title: string;
    };
    link?: string;
    priority?: {
      slug: string;
    };
  }>;
}

const { 
  subtitle = "Qu'est-ce qui s'en dit ?",
  title,
  description,
  linkText = "En savoir plus",
  linkUrl = "#temoignages-complets",
  sectionIndex = 0,
  testimonials = []
} = Astro.props;

// Charger tous les témoignages dynamiquement
const dynamicTestimonials = await getTestimonialCards();

// Utiliser les témoignages dynamiques au lieu des témoignages passés en props
const safeTestimonials = dynamicTestimonials;

// ID unique pour l'accessibilité
const sectionId = 'temoignages';
const titleId = `${sectionId}-title`;
---

<section 
  class="testimonials-section" 
  id={sectionId}
  itemscope 
  itemtype="https://schema.org/ItemList"
>
  <div class="testimonials">
    <div class="testimonials__container">
      <header class="testimonials__header">
        <div class="testimonials__header-content">
          <p class="testimonials__subtitle" data-bind={`sections.${sectionIndex}.testimonials.subtitle`}>{subtitle}</p>
          <h2 class="testimonials__title" id={titleId} data-bind={`sections.${sectionIndex}.testimonials.title`}>{title}</h2>
          {description && (
            <p class="testimonials__description" data-bind={`sections.${sectionIndex}.testimonials.description`}>{description}</p>
          )}
          <a href={linkUrl} class="testimonials__link" aria-label="Voir tous les témoignages" data-bind={`sections.${sectionIndex}.testimonials.linkUrl`}>
            <span data-bind={`sections.${sectionIndex}.testimonials.linkText`}>{linkText}</span>
            <svg 
              class="testimonials__link-arrow" 
              width="10" 
              height="9" 
              viewBox="0 0 10 9" 
              fill="none" 
              xmlns="http://www.w3.org/2000/svg" 
              aria-hidden="true"
            >
              <path 
                d="M1 4.5H9M9 4.5L5.5 1M9 4.5L5.5 8" 
                stroke="#048B9A" 
                stroke-width="1.5" 
                stroke-linecap="round" 
                stroke-linejoin="round"
              />
            </svg>
          </a>
        </div>
        
        <div class="testimonials__navigation" role="navigation" aria-label="Navigation des témoignages">
          <button 
            class="testimonials__nav-btn testimonials__nav-btn--prev" 
            aria-label="Témoignage précédent" 
            type="button"
            data-scroll-dir="prev"
          >
            <svg 
              width="11" 
              height="21" 
              viewBox="0 0 11 21" 
              fill="none" 
              xmlns="http://www.w3.org/2000/svg" 
              aria-hidden="true"
            >
              <path 
                d="M10 1L1 10.5L10 20" 
                stroke="#FFFEF8" 
                stroke-width="2" 
                stroke-linecap="round" 
                stroke-linejoin="round"
              />
            </svg>
          </button>
          <button 
            class="testimonials__nav-btn testimonials__nav-btn--next" 
            aria-label="Témoignage suivant" 
            type="button"
            data-scroll-dir="next"
          >
            <svg 
              width="11" 
              height="21" 
              viewBox="0 0 11 21" 
              fill="none" 
              xmlns="http://www.w3.org/2000/svg" 
              aria-hidden="true"
            >
              <path 
                d="M1 1L10 10.5L1 20" 
                stroke="#FFFEF8" 
                stroke-width="2" 
                stroke-linecap="round" 
                stroke-linejoin="round"
              />
            </svg>
          </button>
        </div>
      </header>

      <div 
        class="testimonials__grid" 
        role="list" 
        aria-labelledby={titleId}
        data-testimonials-grid
      >
        {safeTestimonials.length > 0 ? (
          safeTestimonials.map((testimonial) => (
            <TestimonialCard testimonial={testimonial} />
          ))
        ) : (
          <p>Aucun témoignage n'a été ajouté</p>
        )}
      </div>
    </div>
  </div>
</section>

<script>
  // Navigation du carrousel de témoignages
  function initTestimonialsNavigation() {
    const grid = document.querySelector('[data-testimonials-grid]') as HTMLElement;
    if (!grid) {
      console.warn('[Testimonials] Grid not found');
      return;
    }

    const prevBtn = document.querySelector('.testimonials__nav-btn--prev') as HTMLButtonElement;
    const nextBtn = document.querySelector('.testimonials__nav-btn--next') as HTMLButtonElement;

    if (!prevBtn || !nextBtn) {
      console.warn('[Testimonials] Navigation buttons not found');
      return;
    }

    // Fonction pour calculer la largeur de scroll
    const getScrollAmount = () => {
      const firstCard = grid.querySelector('.projects__card') as HTMLElement;
      
      if (firstCard) {
        const cardRect = firstCard.getBoundingClientRect();
        const gap = window.getComputedStyle(grid).gap;
        const gapValue = parseInt(gap) || 24;
        return cardRect.width + gapValue;
      }
      
      // Fallback basé sur la taille d'écran
      const screenWidth = window.innerWidth;
      let cardWidth = 388;
      let gap = 24;
      
      if (screenWidth <= 480) {
        cardWidth = Math.min(300, screenWidth * 0.85);
        gap = 16;
      } else if (screenWidth <= 768) {
        cardWidth = Math.min(350, screenWidth * 0.48);
        gap = 20;
      } else if (screenWidth <= 1024) {
        cardWidth = Math.min(380, screenWidth * 0.32);
        gap = 22;
      } else {
        cardWidth = Math.min(388, screenWidth * 0.26);
        gap = 24;
      }
      
      return cardWidth + gap;
    };

    // Gestion des boutons de navigation
    prevBtn.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      grid.scrollBy({ left: -getScrollAmount(), behavior: 'smooth' });
    });

    nextBtn.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      grid.scrollBy({ left: getScrollAmount(), behavior: 'smooth' });
    });

    // Drag to scroll (desktop)
    let isDown = false;
    let startX: number;
    let scrollLeft: number;

    grid.addEventListener('mousedown', (e: MouseEvent) => {
      if (e.button !== 0) return; // Only left click
      isDown = true;
      grid.classList.add('is-grabbing');
      startX = e.pageX - grid.offsetLeft;
      scrollLeft = grid.scrollLeft;
      grid.style.cursor = 'grabbing';
    });

    grid.addEventListener('mouseleave', () => {
      if (isDown) {
        isDown = false;
        grid.classList.remove('is-grabbing');
        grid.style.cursor = 'grab';
      }
    });

    grid.addEventListener('mouseup', () => {
      if (isDown) {
        isDown = false;
        grid.classList.remove('is-grabbing');
        grid.style.cursor = 'grab';
      }
    });

    grid.addEventListener('mousemove', (e: MouseEvent) => {
      if (!isDown) return;
      e.preventDefault();
      const x = e.pageX - grid.offsetLeft;
      const walk = (x - startX) * 1.5;
      grid.scrollLeft = scrollLeft - walk;
    });

    // Touch events (mobile)
    let touchStartX: number;
    let touchScrollLeft: number;
    let isTouching = false;

    grid.addEventListener('touchstart', (e: TouchEvent) => {
      if (e.touches.length !== 1) return;
      isTouching = true;
      touchStartX = e.touches[0].pageX - grid.offsetLeft;
      touchScrollLeft = grid.scrollLeft;
    }, { passive: true });

    grid.addEventListener('touchmove', (e: TouchEvent) => {
      if (!isTouching || e.touches.length !== 1) return;
      const touchX = e.touches[0].pageX - grid.offsetLeft;
      const walk = (touchX - touchStartX) * 1.5;
      grid.scrollLeft = touchScrollLeft - walk;
    }, { passive: true });

    grid.addEventListener('touchend', () => {
      isTouching = false;
    });

    grid.addEventListener('touchcancel', () => {
      isTouching = false;
    });

    // Initialiser le curseur
    grid.style.cursor = 'grab';
  }

  // Initialiser au chargement
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initTestimonialsNavigation);
  } else {
    setTimeout(initTestimonialsNavigation, 100);
  }
</script>

<style>
/* CSS extrait de wp-content/themes/oveco/style.css (testimonials section) */
/* Réutilise les styles projets avec carrousel horizontal */

.testimonials-section {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  background: #FFFEF8;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.testimonials__container {
  width: 100%;
  max-width: 1589px;
  padding: 57px 109px;
  display: flex;
  flex-direction: column;
  gap: 89px;
  box-sizing: border-box;
}

@media (max-width: 1400px) {
  .testimonials__container {
    padding: 50px 80px;
    gap: 70px;
  }
}

@media (max-width: 1200px) {
  .testimonials__container {
    padding: 45px 60px;
    gap: 60px;
  }
}

@media (max-width: 1024px) {
  .testimonials__container {
    padding: 40px 40px;
    gap: 50px;
  }
}

@media (max-width: 768px) {
  .testimonials__container {
    padding: 35px 2rem;
    gap: 40px;
  }
}

@media (max-width: 480px) {
  .testimonials__container {
    padding: 30px 1rem;
    gap: 35px;
  }
}

.testimonials__header {
  width: 100%;
  max-width: 1219px;
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}

@media (max-width: 768px) {
  .testimonials__header {
    flex-direction: column;
    align-items: flex-start;
    gap: 30px;
  }
}

.testimonials__header-content {
  width: 493px;
  max-width: 100%;
  display: flex;
  flex-direction: column;
  gap: 11px;
}

.testimonials__subtitle {
  color: #5C6D6F;
  font-size: 19.2px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 700;
  text-transform: uppercase;
  line-height: 20px;
  letter-spacing: 1.92px;
  margin: 0;
}

.testimonials__title {
  color: #334749;
  font-size: 39.81px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 800;
  line-height: 47.77px;
  margin: 0;
}

.testimonials__description {
  color: #5C6D6F;
  font-size: 16px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 400;
  line-height: 28.8px;
  margin: 0;
}

.testimonials__link {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  text-decoration: none;
  line-height: 1;
}

.testimonials__link span {
  color: #048B9A;
  font-size: 16px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 700;
  line-height: 19.2px;
}

.testimonials__link-arrow {
  width: 10px;
  height: 8.57px;
  display: block;
  flex-shrink: 0;
  transform: translateY(0.5px);
}

.testimonials__navigation {
  width: 400px;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 28px;
}

.testimonials__nav-btn {
  width: 64px;
  height: 64px;
  background: #334749;
  border: none;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: none;
}

.testimonials__nav-btn:focus {
  outline: 2px solid #048B9A;
  outline-offset: 4px;
}

.testimonials__nav-btn svg {
  width: 11px;
  height: 21px;
}

@media (max-width: 768px) {
  .testimonials__navigation {
    width: auto;
    justify-content: flex-start;
  }
  
  .testimonials__nav-btn {
    width: 56px;
    height: 56px;
  }
  
  .testimonials__nav-btn svg {
    width: 10px;
    height: 18px;
  }
}

@media (max-width: 480px) {
  .testimonials__nav-btn {
    width: 48px;
    height: 48px;
  }
  
  .testimonials__nav-btn svg {
    width: 8px;
    height: 16px;
  }
}

.testimonials__grid {
  display: flex;
  align-items: stretch;
  gap: 24px;
  width: 100%;
  overflow-x: auto;
  overflow-y: hidden;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  cursor: grab;
  touch-action: pan-x;
  scrollbar-width: none;
  -ms-overflow-style: none;
  padding: 0.5rem 1rem 1rem 0;
  margin-right: -1rem;
  position: relative;
}

.testimonials__grid::-webkit-scrollbar {
  display: none;
  width: 0;
  height: 0;
}

/* Padding responsive géré dans les media queries suivantes */

.testimonials__grid > .projects__card {
  width: clamp(280px, 85vw, 388px);
  min-width: 280px;
  max-width: 388px;
  height: clamp(400px, 70vw, 548px);
  flex: 0 0 auto;
}

/* Désactiver la sélection et les interactions du texte pendant le drag */
.testimonials__grid > .projects__card,
.testimonials__grid > .projects__card * {
  user-select: none;
  -webkit-user-select: none;
}

.testimonials__grid > .projects__card .projects__card-content {
  height: auto;
}

@media (max-width: 1200px) {
  .testimonials__grid {
    gap: 20px;
    padding: 0.5rem 0.75rem 1rem 0;
  }
  
  .testimonials__grid > .projects__card {
    width: clamp(300px, 38vw, 380px);
    height: clamp(420px, 55vw, 520px);
  }
}

@media (max-width: 1024px) {
  .testimonials__grid {
    gap: 18px;
    padding: 0.5rem 0.5rem 1rem 0;
  }
  
  .testimonials__grid > .projects__card {
    width: clamp(300px, 42vw, 360px);
    height: clamp(400px, 58vw, 500px);
  }
}

@media (max-width: 768px) {
  .testimonials__grid {
    gap: 12px;
    padding: 0.5rem 1rem 1rem 0;
  }
  
  .testimonials__grid > .projects__card {
    width: clamp(280px, 85vw, 340px);
    height: clamp(380px, 70vw, 460px);
  }
}

@media (max-width: 480px) {
  .testimonials__grid {
    gap: 10px;
    padding: 0.5rem 0.75rem 1rem 0;
  }
  
  .testimonials__grid > .projects__card {
    width: clamp(260px, 82vw, 300px);
    min-width: 260px;
    height: clamp(350px, 75vw, 420px);
  }
}

.testimonials__grid.is-grabbing {
  cursor: grabbing;
}
</style>
