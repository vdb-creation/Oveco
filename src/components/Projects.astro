---
/**
 * Projects Section - Oveco
 * Section des projets avec grille responsive et navigation
 * 
 * @component
 * @tinacms Template : projects
 */

import Card from './Card.astro';
import { getAllProjects, projectToCard } from '../lib/projects';

export interface Props {
  subtitle?: string;
  title: string;
  description?: string;
  linkText?: string;
  linkUrl?: string;
  sectionIndex?: number;
  // Les cartes sont maintenant générées dynamiquement depuis les projets
  // Le paramètre cards est conservé pour la compatibilité mais ne sera plus utilisé
  cards?: Array<{
    image: string;
    type?: string;
    client?: string;
    title: string;
    url: string;
    description?: string;
  }>;
}

const { 
  subtitle = "Nos réalisations",
  title,
  description,
  linkText = "En savoir plus",
  linkUrl = "/works",
  sectionIndex = 0,
  cards = []
} = Astro.props;

// Charger tous les projets et les convertir en cartes
const allProjects = await getAllProjects();
const dynamicCards = allProjects.map(projectToCard);

// Utiliser les cartes dynamiques au lieu des cartes manuelles
const safeCards = dynamicCards;

// ID unique pour l'accessibilité
const sectionId = 'projets';
const titleId = `${sectionId}-title`;
---

<section 
  class="projects-section" 
  id={sectionId}
  itemscope 
  itemtype="https://schema.org/ItemList"
>
  <div class="projects">
    <div class="projects__container">
      <header class="projects__header">
        <div class="projects__header-content">
          <p class="projects__subtitle" data-bind={`sections.${sectionIndex}.subtitle`}>{subtitle}</p>
          <h2 class="projects__title" id={titleId} itemprop="name" data-bind={`sections.${sectionIndex}.title`}>{title}</h2>
          {description && (
            <p class="projects__description" itemprop="description" data-bind={`sections.${sectionIndex}.description`}>{description}</p>
          )}
          <a 
            href={linkUrl} 
            class="projects__link" 
            aria-label="Voir tous nos projets (page Réalisations)"
            data-bind={`sections.${sectionIndex}.linkUrl`}
          >
            <span data-bind={`sections.${sectionIndex}.linkText`}>{linkText}</span>
            <svg 
              class="projects__link-arrow" 
              width="10" 
              height="9" 
              viewBox="0 0 10 9" 
              fill="none" 
              xmlns="http://www.w3.org/2000/svg" 
              aria-hidden="true"
            >
              <path 
                d="M1 4.5H9M9 4.5L5.5 1M9 4.5L5.5 8" 
                stroke="#048B9A" 
                stroke-width="1.5" 
                stroke-linecap="round" 
                stroke-linejoin="round"
              />
            </svg>
          </a>
        </div>
        
        <div class="projects__navigation" role="navigation" aria-label="Navigation des projets">
          <button 
            class="projects__nav-btn projects__nav-btn--prev" 
            aria-label="Projet précédent" 
            type="button"
            data-scroll-dir="prev"
          >
            <svg 
              width="11" 
              height="21" 
              viewBox="0 0 11 21" 
              fill="none" 
              xmlns="http://www.w3.org/2000/svg" 
              aria-hidden="true"
            >
              <path 
                d="M10 1L1 10.5L10 20" 
                stroke="#FFFEF8" 
                stroke-width="2" 
                stroke-linecap="round" 
                stroke-linejoin="round"
              />
            </svg>
          </button>
          <button 
            class="projects__nav-btn projects__nav-btn--next" 
            aria-label="Projet suivant" 
            type="button"
            data-scroll-dir="next"
          >
            <svg 
              width="11" 
              height="21" 
              viewBox="0 0 11 21" 
              fill="none" 
              xmlns="http://www.w3.org/2000/svg" 
              aria-hidden="true"
            >
              <path 
                d="M1 1L10 10.5L1 20" 
                stroke="#FFFEF8" 
                stroke-width="2" 
                stroke-linecap="round" 
                stroke-linejoin="round"
              />
            </svg>
          </button>
        </div>
      </header>

      <div 
        class="projects__grid" 
        role="list" 
        aria-labelledby={titleId}
        data-projects-grid
      >
        {safeCards.length > 0 ? (
          safeCards.map((card) => (
            <Card {...card} />
          ))
        ) : (
          <p>Aucun projet n'a été ajouté</p>
        )}
      </div>
    </div>
  </div>
</section>

<script>
  // Navigation du carrousel de projets
  function initProjectsNavigation() {
    const grid = document.querySelector('[data-projects-grid]') as HTMLElement;
    if (!grid) {
      console.warn('[Projects] Grid not found');
      return;
    }

    const prevBtn = document.querySelector('.projects__nav-btn--prev') as HTMLButtonElement;
    const nextBtn = document.querySelector('.projects__nav-btn--next') as HTMLButtonElement;

    if (!prevBtn || !nextBtn) {
      console.warn('[Projects] Navigation buttons not found');
      return;
    }

    // Fonction pour calculer la largeur de scroll
    const getScrollAmount = () => {
      const screenWidth = window.innerWidth;
      const firstCard = grid.querySelector('.projects__card') as HTMLElement;
      
      if (firstCard) {
        const cardRect = firstCard.getBoundingClientRect();
        const gap = window.getComputedStyle(grid).gap;
        const gapValue = parseInt(gap) || 14;
        return cardRect.width + gapValue;
      }
      
      // Fallback basé sur la taille d'écran
      let cardWidth = 412;
      let gap = 14;
      
      if (screenWidth <= 480) {
        cardWidth = Math.min(300, screenWidth * 0.85);
        gap = 8;
      } else if (screenWidth <= 768) {
        cardWidth = Math.min(350, screenWidth * 0.48);
        gap = 10;
      } else if (screenWidth <= 1024) {
        cardWidth = Math.min(380, screenWidth * 0.32);
        gap = 12;
      } else {
        cardWidth = Math.min(412, screenWidth * 0.26);
        gap = 14;
      }
      
      return cardWidth + gap;
    };

    // Gestion des boutons de navigation
    prevBtn.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      grid.scrollBy({ left: -getScrollAmount(), behavior: 'smooth' });
    });

    nextBtn.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      grid.scrollBy({ left: getScrollAmount(), behavior: 'smooth' });
    });

    // Drag to scroll (desktop)
    let isDown = false;
    let startX: number;
    let scrollLeft: number;

    grid.addEventListener('mousedown', (e) => {
      if (e.button !== 0) return; // Only left click
      isDown = true;
      grid.classList.add('is-grabbing');
      startX = e.pageX - grid.offsetLeft;
      scrollLeft = grid.scrollLeft;
      grid.style.cursor = 'grabbing';
    });

    grid.addEventListener('mouseleave', () => {
      if (isDown) {
        isDown = false;
        grid.classList.remove('is-grabbing');
        grid.style.cursor = 'grab';
      }
    });

    grid.addEventListener('mouseup', () => {
      if (isDown) {
        isDown = false;
        grid.classList.remove('is-grabbing');
        grid.style.cursor = 'grab';
      }
    });

    grid.addEventListener('mousemove', (e) => {
      if (!isDown) return;
      e.preventDefault();
      const x = e.pageX - grid.offsetLeft;
      const walk = (x - startX) * 1.5; // Facteur de sensibilité
      grid.scrollLeft = scrollLeft - walk;
    });

    // Touch events (mobile)
    let touchStartX: number;
    let touchScrollLeft: number;
    let isTouching = false;

    grid.addEventListener('touchstart', (e) => {
      if (e.touches.length !== 1) return;
      isTouching = true;
      touchStartX = e.touches[0].pageX - grid.offsetLeft;
      touchScrollLeft = grid.scrollLeft;
    }, { passive: true });

    grid.addEventListener('touchmove', (e) => {
      if (!isTouching || e.touches.length !== 1) return;
      const touchX = e.touches[0].pageX - grid.offsetLeft;
      const walk = (touchX - touchStartX) * 1.5;
      grid.scrollLeft = touchScrollLeft - walk;
    }, { passive: true });

    grid.addEventListener('touchend', () => {
      isTouching = false;
    });

    grid.addEventListener('touchcancel', () => {
      isTouching = false;
    });

    // Initialiser le curseur
    grid.style.cursor = 'grab';
  }

  // Initialiser au chargement
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initProjectsNavigation);
  } else {
    // Attendre un peu pour être sûr que le DOM est prêt
    setTimeout(initProjectsNavigation, 100);
  }
</script>

<style is:global>
/* CSS extrait de wp-content/themes/oveco/style.css (projects section) */
/* Styles globaux pour être réutilisés par TestimonialCard.astro */
.projects-section {
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  background: #FFFEF8;
  overflow: hidden;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  display: flex;
}

.projects__container {
  width: 100%;
  max-width: 1589px;
  padding: 57px 109px;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: 89px;
  display: flex;
  box-sizing: border-box;
}

@media (max-width: 1400px) {
  .projects__container {
    padding: 50px 80px;
    gap: 70px;
  }
}

@media (max-width: 1200px) {
  .projects__container {
    padding: 45px 60px;
    gap: 60px;
  }
}

@media (max-width: 1024px) {
  .projects__container {
    padding: 40px 40px;
    gap: 50px;
  }
}

@media (max-width: 768px) {
  .projects__container {
    padding: 35px 2rem;
    gap: 40px;
  }
}

@media (max-width: 480px) {
  .projects__container {
    padding: 30px 1rem;
    gap: 35px;
  }
}

.projects__header {
  width: 100%;
  max-width: 1219px;
  justify-content: space-between;
  align-items: flex-end;
  display: flex;
}

@media (max-width: 768px) {
  .projects__header {
    flex-direction: column;
    align-items: flex-start;
    gap: 30px;
  }
}

.projects__header-content {
  width: 589px;
  max-width: 100%;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: 11px;
  display: flex;
}

@media (max-width: 768px) {
  .projects__header-content {
    width: 100%;
  }
}

.projects__subtitle {
  color: #5C6D6F;
  font-size: 19.2px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 700;
  text-transform: uppercase;
  line-height: 20px;
  letter-spacing: 1.92px;
  margin: 0;
}

@media (max-width: 768px) {
  .projects__subtitle {
    font-size: 17px;
    letter-spacing: 1.5px;
  }
}

@media (max-width: 480px) {
  .projects__subtitle {
    font-size: 15px;
    line-height: 18px;
    letter-spacing: 1.2px;
  }
}

.projects__title {
  align-self: stretch;
  color: #334749;
  font-size: 39.81px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 800;
  line-height: 47.77px;
  margin: 0;
}

@media (max-width: 768px) {
  .projects__title {
    font-size: 32px;
    line-height: 38px;
  }
}

@media (max-width: 480px) {
  .projects__title {
    font-size: 26px;
    line-height: 30px;
  }
}

.projects__description {
  align-self: stretch;
  color: #334749;
  font-size: 16px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 400;
  line-height: 28.8px;
  margin: 0;
}

@media (max-width: 768px) {
  .projects__description {
    font-size: 15px;
    line-height: 26px;
  }
}

@media (max-width: 480px) {
  .projects__description {
    font-size: 14px;
    line-height: 24px;
  }
}

.projects__link {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  text-decoration: none;
  white-space: nowrap;
  transition: none;
  line-height: 1;
}

.projects__link:focus {
  outline: 2px solid #048B9A;
  outline-offset: 4px;
  border-radius: 4px;
}

.projects__link span {
  color: #048B9A;
  font-size: 16px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 700;
  line-height: 19.2px;
  text-align: center;
}

.projects__link-arrow {
  width: 10px;
  height: 8.57px;
  flex-shrink: 0;
  display: block;
  transform: translateY(0.5px);
}

.projects__navigation {
  width: 400px;
  justify-content: flex-end;
  align-items: center;
  gap: 28px;
  display: flex;
  position: relative;
  z-index: 2;
}

@media (max-width: 768px) {
  .projects__navigation {
    width: auto;
    justify-content: flex-start;
  }
}

@media (max-width: 480px) {
  .projects__navigation {
    width: 100%;
    display: flex;
    justify-content: flex-start;
    gap: 16px;
    margin-top: 8px;
    z-index: 2;
  }
}

.projects__nav-btn {
  width: 64px;
  height: 64px;
  background: #334749;
  border-radius: 50%;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: none;
  position: relative;
}

.projects__nav-btn:focus {
  outline: 2px solid #048B9A;
  outline-offset: 4px;
}

.projects__nav-btn svg {
  width: 11px;
  height: 21px;
}

@media (max-width: 768px) {
  .projects__nav-btn {
    width: 56px;
    height: 56px;
  }
  
  .projects__nav-btn svg {
    width: 10px;
    height: 18px;
  }
}

@media (max-width: 480px) {
  .projects__nav-btn {
    width: 48px;
    height: 48px;
  }
  
  .projects__nav-btn svg {
    width: 8px;
    height: 16px;
  }
}

.projects__grid {
  display: flex;
  align-items: stretch;
  overflow-x: auto;
  overflow-y: hidden;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  gap: 14px;
  padding: 0.5rem 1rem 1rem 0;
  margin-right: -1rem;
  scrollbar-width: none;
  -ms-overflow-style: none;
  width: 100%;
  position: relative;
}

.projects__grid::-webkit-scrollbar {
  display: none;
  width: 0;
  height: 0;
}

.projects__grid > .projects__card {
  width: clamp(280px, 85vw, 388px);
  min-width: 280px;
  max-width: 388px;
  height: clamp(400px, 70vw, 548px);
  flex: 0 0 auto;
}

.projects__grid > .projects__card .projects__card-content {
  height: auto;
}

@media (max-width: 1200px) {
  .projects__grid {
    gap: 12px;
    padding: 0.5rem 0.75rem 1rem 0;
  }
  
  .projects__grid > .projects__card {
    width: clamp(300px, 38vw, 380px);
    height: clamp(420px, 55vw, 520px);
  }
}

@media (max-width: 1024px) {
  .projects__grid {
    gap: 10px;
    padding: 0.5rem 0.5rem 1rem 0;
  }
  
  .projects__grid > .projects__card {
    width: clamp(300px, 42vw, 360px);
    height: clamp(400px, 58vw, 500px);
  }
}

@media (max-width: 768px) {
  .projects__grid {
    gap: 12px;
    padding: 0.5rem 1rem 1rem 0;
  }
  
  .projects__grid > .projects__card {
    width: clamp(280px, 85vw, 340px);
    height: clamp(380px, 70vw, 460px);
  }
}

@media (max-width: 480px) {
  .projects__grid {
    gap: 10px;
    padding: 0.5rem 0.75rem 1rem 0;
  }
  
  .projects__grid > .projects__card {
    width: clamp(260px, 82vw, 300px);
    min-width: 260px;
    height: clamp(350px, 75vw, 420px);
  }
}

.projects__card {
  width: 388px;
  height: 548px;
  padding: 18px 18px 30px 18px;
  position: relative;
  overflow: hidden;
  border-radius: 24px;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  display: inline-flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: flex-start;
  gap: 17px;
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.04);
  user-select: none;
  -webkit-user-select: none;
}

.projects__card * {
  user-select: none;
  -webkit-user-select: none;
}

/* Les cartes utilisent maintenant flex: 0 0 auto avec des largeurs dynamiques */
/* Pas besoin de override sur mobile car elles sont déjà responsive */

.projects__card-overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(180deg, rgba(17, 24, 39, 0) 0%, rgba(17, 24, 39, 0.25) 35%, rgba(17, 24, 39, 0.55) 65%, rgba(17, 24, 39, 0.65) 100%), linear-gradient(200deg, rgba(255, 249, 237, 0) 0%, rgba(255, 249, 237, 0.12) 50%, rgba(255, 249, 237, 0.2) 100%);
  -webkit-backdrop-filter: blur(3px);
  backdrop-filter: blur(3px);
  pointer-events: none;
}

.projects__card-content {
  align-self: stretch;
  height: 451px;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: flex-end;
  position: static;
  z-index: 1;
}

@media (max-width: 1200px) {
  .projects__card-content {
    height: auto;
    gap: 14px;
  }
}

.projects__card-header {
  position: absolute;
  top: 18px;
  right: 18px;
  z-index: 2;
  text-align: right;
}

.projects__card-type {
  color: #FFFEF8;
  font-size: 14px;
  font-family: "DM Sans", "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 700;
  text-transform: uppercase;
  line-height: 22px;
  letter-spacing: 1.4px;
  text-align: right;
  display: inline-block;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.35);
  user-select: none;
}

.projects__card-info {
  align-self: stretch;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.projects__card-client {
  color: rgba(255, 254, 248, 0.85);
  font-size: 14px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 700;
  text-transform: uppercase;
  line-height: 22px;
  letter-spacing: 1.4px;
  margin: 0;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.35);
}

.projects__card-title {
  align-self: stretch;
  color: #FFFEF8;
  font-size: 27.65px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 800;
  line-height: 30.42px;
  margin: 0;
  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

.projects__card-description {
  align-self: stretch;
  color: rgba(255, 254, 248, 0.92);
  font-size: 14px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 400;
  line-height: 21px;
  margin: 0;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.35);
}

.projects__card-footer {
  padding-top: 12px;
  display: inline-flex;
  justify-content: flex-start;
  align-items: flex-end;
  gap: 6px;
  position: relative;
  z-index: 2;
}

.projects__card-link {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  text-decoration: none;
  transition: none;
}

.projects__card-link:focus {
  outline: 2px solid #048B9A;
  outline-offset: 4px;
  border-radius: 4px;
}

.projects__card-link span {
  color: #048B9A;
  font-size: 16px;
  font-family: "Nunito Sans Variable", "Nunito Sans", system-ui, -apple-system, sans-serif;
  font-weight: 700;
  line-height: 19.2px;
  text-align: center;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 0.25), 0 1px 2px rgba(0, 0, 0, 0.25);
}

.projects__card-arrow {
  width: 10px;
  height: 8.57px;
  flex-shrink: 0;
  display: block;
  transform: translateY(0.5px);
}

@media (prefers-reduced-motion: reduce) {
  .projects__card,
  .projects__nav-btn,
  .projects__link,
  .projects__card-link {
    transition: none !important;
  }
}

.projects__grid.is-grabbing {
  cursor: grabbing;
}
</style>
